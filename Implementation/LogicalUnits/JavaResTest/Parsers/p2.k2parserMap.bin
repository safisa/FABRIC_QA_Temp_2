<Graph name="p2.k2parserMap.bin" lastPartID="99" mapType="ParserMap" logicalUnitNodeType="Full_Hierarchy">
  <ParserRecordTypeTargetNode partID="0" name="P1_RT1" pos="728.003662 154" size="312.996338 62.0729065" parserName="p2" isTargetNode="true" isRoot="false" />
  <FunctionMapNode id="0" L0="1" L1="2" L2="3" L3="4" L4="5" L5="6" R0="7" partID="1" topLabel="k2_FolderStreamReader (1)" pos="85.6809845 75" size="172.259079 97.5286255" isRoot="true">
    <KFunction>{"Name":"k2_FolderStreamReader","ID":"f_1","Category":"Parser","FunctionLevel":1,"FunctionType":0,"FunctionType2":0,"RegisterAsLuDbFunction":false,"SaveToDLUR":false,"ApiFunction":false,"DecisionFunction":false,"RequiresLuReference":false,"Desc":"A template function to be used as a root function for parser map.\nThe function scans a folder for delimited files based on a file name pattern, parses the files and generates a stream of records.\n","Auther":{"Name":"","ID":""},"Language":1,"FunctionBody":"boolean inDebug = inDebugMode();\nif (inDebug){\n\tfolderPath = folderPathDebug;\n}\n\nif(folderPath == null || folderPath.isEmpty()){\n\tthrow new IllegalArgumentException(\"Please Populate Mandatory Parameter: Folder Path\");\n}\n\nif(enclosingChar == null || enclosingChar.isEmpty()){\n\tthrow new IllegalArgumentException(\"Please Populate Mandatory Parameter: Enclosing Char\");\n}\n\nif(fieldDelimiter == null || fieldDelimiter.isEmpty()){\n\tthrow new IllegalArgumentException(\"Please Populate Mandatory Parameter: Field Delimiter\");\n}\n\nif(regexFilter == null || regexFilter.isEmpty()){\n\tthrow new IllegalArgumentException(\"Please Populate Mandatory Parameter: Regex Filter\");\n}\n\nif(recordDelimiter == null || recordDelimiter.isEmpty()){\n\tthrow new IllegalArgumentException(\"Please Populate Mandatory Parameter: Record Delimiter\");\n}\n\nFolderReader reader = new FolderReader(folderPath, regexFilter);\nInputStreamReader stream = null;\n\nwhile ((stream = reader.getNextStream()) != null) {\t\n\tObject[] row = null;\n\tdo {\n\t\trow = getStreamMap(stream, enclosingChar.charAt(0), fieldDelimiter.charAt(0), recordDelimiter);\n\t    yield(row);\n\t} while (row !=null &amp;&amp; row[0] != null);\n\t\n\t// Drop stream only in running mode\n\tif(!inDebug) { // Running mode\n\t\treader.dropStream(stream);\n\t}\n}\n","IsSyntaxValid":true,"IsRootFunction":true,"inputParams":[{"Name":"folderPath","ID":"fi_1.0","Index":0,"DataType":"String","Comment":"the folder to scan for files"},{"Name":"folderPathDebug","ID":"fi_1.1","Index":1,"DataType":"String","Comment":"the folder to scan for files in debug mode"},{"Name":"regexFilter","ID":"fi_1.2","Index":2,"DataType":"String","Comment":"a Java regualr expression of file names to be parsed"},{"Name":"recordDelimiter","ID":"fi_1.3","Index":3,"DataType":"String","Comment":"a character to be used as a separator between records"},{"Name":"fieldDelimiter","ID":"fi_1.4","Index":4,"DataType":"String","Comment":"a character to be used as a separator between fields"},{"Name":"enclosingChar","ID":"fi_1.5","Index":5,"DataType":"String","Comment":"a character to be used to enclose fields"}],"outputParams":[{"Name":"result","ID":"fo_1.0","Index":0,"DataType":"Map&lt;String,Object&gt;","Comment":""}]}</KFunction>
  </FunctionMapNode>
  <ParserRecordTypeTargetNode partID="35" name="P1_RT2" pos="761.002563 357" size="312.997437 62.0729065" parserName="p2" isTargetNode="true" isRoot="false" />
  <Link from="7" to="8" partID="10" pointsArr="242.226135 126.309891 252.226135 126.309891 718.003662 185.036453 728.003662 185.036453" fromNodePartID="1" fromNodeColumnName="result" toNodePartID="0" toNodeColumnName="result" />
</Graph>