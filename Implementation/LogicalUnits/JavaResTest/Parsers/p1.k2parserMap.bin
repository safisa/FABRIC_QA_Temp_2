<Graph name="p1.k2parserMap.bin" lastPartID="345" mapType="ParserMap" logicalUnitNodeType="Full_Hierarchy">
  <FunctionMapNode id="0" L0="4" L1="5" L2="6" L3="7" L4="8" L5="9" R0="10" partID="1" topLabel="k2_FolderStreamReader (1)" pos="1.99996948 131.235672" size="172.2591 97.52864" isRoot="true">
    <KFunction>{"Name":"k2_FolderStreamReader","ID":"f_1","Category":"Parser","FunctionLevel":1,"FunctionType":0,"FunctionType2":0,"RegisterAsLuDbFunction":false,"SaveToDLUR":false,"ApiFunction":false,"DecisionFunction":false,"RequiresLuReference":false,"Desc":"A template function to be used as a root function for parser map.\nThe function scans a folder for delimited files based on a file name pattern, parses the files and generates a stream of records.\n","Auther":{"Name":"","ID":""},"Language":1,"FunctionBody":"boolean inDebug = inDebugMode();\nif (inDebug){\n\tfolderPath = folderPathDebug;\n}\n\nif(folderPath == null || folderPath.isEmpty()){\n\tthrow new IllegalArgumentException(\"Please Populate Mandatory Parameter: Folder Path\");\n}\n\nif(enclosingChar == null || enclosingChar.isEmpty()){\n\tthrow new IllegalArgumentException(\"Please Populate Mandatory Parameter: Enclosing Char\");\n}\n\nif(fieldDelimiter == null || fieldDelimiter.isEmpty()){\n\tthrow new IllegalArgumentException(\"Please Populate Mandatory Parameter: Field Delimiter\");\n}\n\nif(regexFilter == null || regexFilter.isEmpty()){\n\tthrow new IllegalArgumentException(\"Please Populate Mandatory Parameter: Regex Filter\");\n}\n\nif(recordDelimiter == null || recordDelimiter.isEmpty()){\n\tthrow new IllegalArgumentException(\"Please Populate Mandatory Parameter: Record Delimiter\");\n}\n\nFolderReader reader = new FolderReader(folderPath, regexFilter);\nInputStreamReader stream = null;\n\nwhile ((stream = reader.getNextStream()) != null) {\t\n\tObject[] row = null;\n\tdo {\n\t\trow = getStreamMap(stream, enclosingChar.charAt(0), fieldDelimiter.charAt(0), recordDelimiter);\n\t    yield(row);\n\t} while (row !=null &amp;&amp; row[0] != null);\n\t\n\t// Drop stream only in running mode\n\tif(!inDebug) { // Running mode\n\t\treader.dropStream(stream);\n\t}\n}\n","IsSyntaxValid":true,"IsRootFunction":true,"inputParams":[{"Name":"folderPath","ID":"fi_1.0","Index":0,"DataType":"String","Comment":"the folder to scan for files"},{"Name":"folderPathDebug","ID":"fi_1.1","Index":1,"DataType":"String","Comment":"the folder to scan for files in debug mode"},{"Name":"regexFilter","ID":"fi_1.2","Index":2,"DataType":"String","Comment":"a Java regualr expression of file names to be parsed"},{"Name":"recordDelimiter","ID":"fi_1.3","Index":3,"DataType":"String","Comment":"a character to be used as a separator between records"},{"Name":"fieldDelimiter","ID":"fi_1.4","Index":4,"DataType":"String","Comment":"a character to be used as a separator between fields"},{"Name":"enclosingChar","ID":"fi_1.5","Index":5,"DataType":"String","Comment":"a character to be used to enclose fields"}],"outputParams":[{"Name":"result","ID":"fo_1.0","Index":0,"DataType":"Map&lt;String,Object&gt;","Comment":""}]}</KFunction>
  </FunctionMapNode>
  <ParserRecordTypeTargetNode partID="35" name="RT2" pos="634.992065 252.78125" size="312.995239 122.4375" parserName="p1" isTargetNode="true" isRoot="false" />
  <FunctionMapNode id="1" L0="11" R0="12" R1="13" R2="14" R3="15" partID="96" topLabel="fnFieldsRT1 (96)" pos="417.460754 56.3085976" size="133.6391 73.38281" isRoot="false">
    <KFunction>{"Name":"fnFieldsRT1","ID":"f_96","Category":"Parser","Version":"3.1.0.1","FunctionLevel":0,"FunctionType":0,"FunctionType2":0,"RegisterAsLuDbFunction":false,"SaveToDLUR":false,"ApiFunction":false,"DecisionFunction":false,"RequiresLuReference":false,"Desc":"","Auther":{"Name":"","ID":""},"Language":1,"FunctionBody":"//return new Object [] {map.get(\"\"),map.get(\"\")};\nreturn map;","IsSyntaxValid":true,"IsRootFunction":false,"inputParams":[{"Name":"map","ID":"fi_96.0","Index":0,"DataType":"Map&lt;String,Object&gt;"}],"outputParams":[{"Name":"col1","ID":"fo_96.0","Index":0,"DataType":"String","Comment":""},{"Name":"col2","ID":"fo_96.1","Index":1,"DataType":"String","Comment":""},{"Name":"col3","ID":"fo_96.2","Index":2,"DataType":"String","Comment":""},{"Name":"col4","ID":"fo_96.3","Index":3,"DataType":"String","Comment":""}]}</KFunction>
  </FunctionMapNode>
  <ParserRecordTypeTargetNode partID="150" name="RT1" pos="640.9906 41.85417" size="312.998169 98.29166" parserName="p1" isTargetNode="true" isRoot="false" />
  <FunctionMapNode id="2" L0="16" R0="17" R1="18" R2="19" R3="20" R4="21" R5="22" partID="160" topLabel="fnFieldsRT2 (160)" pos="402.504852 257.2357" size="133.55069 97.528656" isRoot="false">
    <KFunction>{"Name":"fnFieldsRT2","ID":"f_160","Category":"Parser","Version":"3.1.0.1","FunctionLevel":0,"FunctionType":0,"FunctionType2":0,"RegisterAsLuDbFunction":false,"SaveToDLUR":false,"ApiFunction":false,"DecisionFunction":false,"RequiresLuReference":false,"Desc":"","Auther":{"Name":"","ID":""},"Language":1,"FunctionBody":"//return new Object [] {map.get(\"\"),map.get(\"\")};\nreturn map;","IsSyntaxValid":true,"IsRootFunction":false,"inputParams":[{"Name":"map","ID":"fi_160.0","Index":0,"DataType":"Map&lt;String,Object&gt;"}],"outputParams":[{"Name":"col1","ID":"fo_160.0","Index":0,"DataType":"String","Comment":""},{"Name":"col2","ID":"fo_160.1","Index":1,"DataType":"String","Comment":""},{"Name":"col3","ID":"fo_160.2","Index":2,"DataType":"String","Comment":""},{"Name":"col4","ID":"fo_160.3","Index":3,"DataType":"String","Comment":""},{"Name":"col5","ID":"fo_160.4","Index":4,"DataType":"String"},{"Name":"col6","ID":"fo_160.5","Index":5,"DataType":"String"}]}</KFunction>
  </FunctionMapNode>
  <FunctionMapNode id="3" L0="23" R0="24" R1="25" partID="180" topLabel="fnRtSwitch (180)" pos="230.108124 156.381516" size="125.614471 49.23697" isRoot="false">
    <KFunction>{"Name":"fnRtSwitch","ID":"f_180","Category":"Parser","Version":"3.1.0.1","FunctionLevel":0,"FunctionType":0,"FunctionType2":0,"RegisterAsLuDbFunction":false,"SaveToDLUR":false,"ApiFunction":false,"DecisionFunction":false,"RequiresLuReference":false,"Desc":"","Auther":{"Name":"","ID":""},"Language":1,"FunctionBody":"String key = mapIn.get(\"key\").toString();\nif(key.equals(\"100\")){\n\treturn new Object [] {mapIn, null};\n}else{\n\treturn new Object [] {null, mapIn};\n}","IsSyntaxValid":true,"IsRootFunction":false,"inputParams":[{"Name":"mapIn","ID":"fi_180.0","Index":0,"DataType":"Map&lt;String,Object&gt;"}],"outputParams":[{"Name":"mapRT1","ID":"fo_180.0","Index":0,"DataType":"Map&lt;String,Object&gt;"},{"Name":"mapRT2","ID":"fo_180.1","Index":1,"DataType":"Map&lt;String,Object&gt;"}]}</KFunction>
  </FunctionMapNode>
  <Link from="12" to="26" partID="155" pointsArr="551.099854 77.43621 561.099854 77.43621 630.9906 72.89063 640.9906 72.89063" fromNodePartID="96" fromNodeColumnName="col1" toNodePartID="150" toNodeColumnName="col1" />
  <Link from="13" to="27" partID="156" pointsArr="551.099854 89.5091248 561.099854 89.5091248 630.9906 84.96355 640.9906 84.96355" fromNodePartID="96" fromNodeColumnName="col2" toNodePartID="150" toNodeColumnName="col2" />
  <Link from="14" to="28" partID="157" pointsArr="551.099854 101.582039 561.099854 101.582039 630.9906 97.03646 640.9906 97.03646" fromNodePartID="96" fromNodeColumnName="col3" toNodePartID="150" toNodeColumnName="col3" />
  <Link from="15" to="29" partID="158" pointsArr="551.099854 113.654953 561.099854 113.654953 630.9906 109.109375 640.9906 109.109375" fromNodePartID="96" fromNodeColumnName="col4" toNodePartID="150" toNodeColumnName="col4" />
  <Link from="24" to="11" partID="159" pointsArr="355.7226 177.509109 365.7226 177.509109 407.460754 95.54558 417.460754 95.54558" fromNodePartID="180" fromNodeColumnName="mapRT1" toNodePartID="96" toNodeColumnName="map" />
  <Link from="17" to="30" partID="174" pointsArr="536.055542 278.3633 546.055542 278.3633 624.992065 283.817719 634.992065 283.817719" fromNodePartID="160" fromNodeColumnName="col1" toNodePartID="35" toNodeColumnName="col1" />
  <Link from="18" to="31" partID="175" pointsArr="536.055542 290.436218 546.055542 290.436218 624.992065 295.890625 634.992065 295.890625" fromNodePartID="160" fromNodeColumnName="col2" toNodePartID="35" toNodeColumnName="col2" />
  <Link from="19" to="32" partID="176" pointsArr="536.055542 302.509125 546.055542 302.509125 624.992065 307.963531 634.992065 307.963531" fromNodePartID="160" fromNodeColumnName="col3" toNodePartID="35" toNodeColumnName="col3" />
  <Link from="20" to="33" partID="177" pointsArr="536.055542 314.582031 546.055542 314.582031 624.992065 320.036438 634.992065 320.036438" fromNodePartID="160" fromNodeColumnName="col4" toNodePartID="35" toNodeColumnName="col4" />
  <Link from="21" to="34" partID="178" pointsArr="536.055542 326.654968 546.055542 326.654968 624.992065 332.109375 634.992065 332.109375" fromNodePartID="160" fromNodeColumnName="col5" toNodePartID="35" toNodeColumnName="col5" />
  <Link from="22" to="35" partID="179" pointsArr="536.055542 338.727875 546.055542 338.727875 624.992065 344.182281 634.992065 344.182281" fromNodePartID="160" fromNodeColumnName="col6" toNodePartID="35" toNodeColumnName="col6" />
  <Link from="25" to="16" partID="184" pointsArr="355.7226 189.582031 365.7226 189.582031 392.504852 308.5456 402.504852 308.5456" fromNodePartID="180" fromNodeColumnName="mapRT2" toNodePartID="160" toNodeColumnName="map" />
  <Link from="10" to="23" partID="185" pointsArr="158.545135 182.545563 168.545135 182.545563 220.108124 183.545563 230.108124 183.545563" fromNodePartID="1" fromNodeColumnName="result" toNodePartID="180" toNodeColumnName="mapIn" />
</Graph>